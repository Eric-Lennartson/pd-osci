==== Roadmap ===================================================================
- update all objects to have a bypass option
- if I end up connecting with blender, I should also have a traveling salesman object
- turn all the brightness abstractions into objects when finished with them
- create a helpfile for rot_osc~, later what is a better name for this?
- update osci/out~ to have a test button
- have the time stamp on record~ be optional
- create a master transforms gui
- create a rotation controller gui
- finish general improvements then start working on remapping tree.
- figure out how to add in remapping tree...
- could I add in a link to blender via OSC? YES
- add a bypass option for all relevant objects
    - that should be most of the library
- create tabreadlin helpfile
- update the following helpfiles with the bypass option
    - bezier~
==== Bugs ======================================================================
all
- add [declare -lib osci] to cut_idx~.pd
- figure out the strange radians / degree bug on shear and others.
- loadbang the current directory for record~
mac
linux
    - icosahedron and octahedron look odd, why?
windows
    - not trying to compile this unless someone seriously is asking for it.
==== Things to Improve =========================================================
- create a dev branch to mess around in, you know, so it's organized
- mess around with the scan processing from derek's library and get it working
    - what features are in derek's library that would be useful to have in mine?
- is there a convienient way to get rid of unused parameter warnings?
- idea for objs like cuboid, setting certain related args with msgs like -size?
- vectorize perf functions if possible
- create lookup tables for cos and sin
    - take a look at how it's done in the pd source
- using bool seems to cause problems
- would having flags for args be helpful for some objects?
    - it seems silly to have to specify all args if you only want
      to put in some of them. (thinking about rotate_pivot~)

==== Gui Stuff =================================================================
- could I do something where the gui is a completely separate abstraction that
can control how other objects work? (something like acriel)

==== Documentation =============================================================
- what are the defaults for cuboid? (and it's relatives)
==== Misc ======================================================================
