==== Roadmap ===================================================================
- gui color scheme
    dark: #293132;
    light: #f3f1eb;
    txt on dark: #ece6d0;
    txt on light: #5A6C6E;
    gui elements: #595c5f;
    accent: #b1d483;

- add some distortion effects
    - swirl
    - randomize?

All of the tsp related plugins will have one help patch that documents everything

- osci/tsp~
    - write Documentation
    - For next update cycle
        - add ability to read in obj files
        - add ability to read in svg files
        - other file types to try and parse?

- osci/catcher~ and osci/thrower~
    - add snake~ now that it's available?

- osci/blender-rcv
    - write Documentation

- osci/blender-tsp
    - write Documentation

- osci/blender-tabread~
    - write documentation

- calibrate~
    - dark and light mode
    - redo how calibrate works
    - polish the gui
        - dynamic cp size,
        - dialog for settings
        - etc.

- add a rotation using quaternions. that way there is no gimbal lock issues.

- osci/m_transform~
    - test out the abstraction
    - has a bug with osci/out~ where it activates all the toggles
    - add a helpfile
    - add to the online docs

- osci/out~
    - when pressing the dsp off button, have it first mute the audio, then turn dsp off. The reverse should happen when turning the audio back on
    - when test is turned on, it should bypass the incoming audio so that the test image is not messed up
    - update the online docs


- osci/record~
    - remove annoying print statements
    - check that the documentation is good

- osci/splitter~
    - update the docs to reflect the gui changes

- tabreadlin~
    - pd crashes when dsp is started and there is no arrays to read from
    - add to the online docs

- turn all the brightness abstractions into objects when finished with them

- finish general improvements then start working on remapping tree.
- figure out how to add in remapping tree...

- update the helpfiles with the bypass option
- make sure helpfiles have the defaults of the objects in there!

Do all of the above before adding this stuff in
- Create an oscillator abstraction that is useful to plug into things when I want to control them with oscillators, that way there's less random duplicate oscillator code running around



==== Bugs ======================================================================
all
- figure out the strange radians / degree bug on shear and others.
- trace~ help file needs to have better defaults
mac
linux
    - icosahedron and octahedron look odd, why?
windows
    - not trying to compile this unless someone seriously is asking for it.
==== Things to Improve =========================================================
- mess around with the scan processing from derek's library and get it working
    - what features are in derek's library that would be useful to have in mine?
- is there a convienient way to get rid of unused parameter warnings?
- idea for objs like cuboid, setting certain related args with msgs like -size?
- vectorize perf functions if possible
- create lookup tables for cos and sin
    - take a look at how it's done in the pd source
- using bool seems to cause problems
- would having flags for args be helpful for some objects?
    - it seems silly to have to specify all args if you only want
      to put in some of them. (thinking about rotate_pivot~)

==== Gui Stuff =================================================================
- could I do something where the gui is a completely separate abstraction that
can control how other objects work? (something like acriel)

==== Documentation =============================================================
- what are the defaults for cuboid? (and it's relatives)
==== Misc ======================================================================
