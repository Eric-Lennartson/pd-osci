#N canvas 813 103 444 567 12;
#X declare -lib osci;
#X obj 3 218 phasor~ 50;
#X obj 3 242 osci/circle~ 0 0 2;
#X obj 145 244 osci/out~;
#X obj 3 286 osci/thrower~ foo;
#X obj 145 218 osci/catcher~ foo;
#X obj 291 -15 declare -lib osci;
#X obj 15 146 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412 -174938
-203556;
#X text 5 364 ============================================================inlets
;
#X text 5 414 ============================================================outlets
;
#X text 5 504 ============================================================arguments
;
#N canvas 0 23 503 114 docs 0;
#X obj 37 37 inlet;
#X obj 37 61 else/openfile https://eric-lennartson.github.io/pd-osci/#/catcher~
;
#X connect 0 0 1 0;
#X restore 15 175 pd docs;
#X text 44 148 online documentation;
#X text 4 6 [catcher~] is a wrapper for pdâ€™s built in [catch~]. Internally
\, it creates three unique catchs based on the symbol argument provided
on creation. For example \, foo-x foo-y foo-z. Any number of [thrower~]
objects can add into one [catcher~] object. But each [catcher~] must
have a unique name.;
#X obj 15 101 catch~;
#X text 65 101 <== Open the help patch for [catch~] for more information
, f 36;
#X text 15 445 1 signal - x;
#X text 15 465 2 signal - y;
#X text 15 485 3 signal - z;
#X text 15 396 none;
#X text 15 536 1 symbol - name to catch;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 3 1;
#X connect 4 0 2 0;
#X connect 4 1 2 1;
#X connect 6 0 10 0;
