#N canvas 405 -901 433 723 12;
#X declare -lib osci;
#X obj 7 228 osci/out~;
#X obj 7 175 phasor~ 50;
#X obj 7 199 osci/circle~ 0 0 1;
#X obj 293 9 declare -lib osci;
#X text 2 466 ============================================================inlets
;
#X text 2 566 ============================================================outlets
;
#X text 2 619 ============================================================arguments
;
#X text 1 677 ========================================================================================================================
;
#X text 24 521 2 signal - right channel (y);
#X text 24 541 3 signal - brightness;
#X text 22 653 none;
#X obj 198 191 bng 24 250 50 0 empty empty empty 30 11 0 12 #58504c
#a8b464 #c4b08c;
#X text 225 194 open online documentation;
#N canvas 0 23 449 130 docs 0;
#X obj 3 36 inlet;
#X obj 3 76 else/openfile https://eric-lennartson.github.io/pd-osci/#/out~
;
#X connect 0 0 1 0;
#X restore 198 225 pd docs;
#X text 24 501 1 signal - left channel (x);
#X text 2 34 [out~] is used to send audio to both speakers and oscilloscope.
It takes 3 inputs \, (x \, y \, and bright). The Test button will draw
a circle in order to test that the scope is working. The number boxes
labeld scope and speakers control the output volume. Scope is linear
while speakers are in db. A routing matrix at the bottom choose which
channels x \, y \, brightness \, left speaker \, and right speaker
are assigned to.;
#X text 24 601 none;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 2 1 0 1;
#X connect 11 0 13 0;
