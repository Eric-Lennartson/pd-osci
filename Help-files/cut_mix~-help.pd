#N canvas 620 23 446 693 12;
#X declare -lib osci;
#X obj 6 105 phasor~ 50;
#X floatatom 57 145 5 0 0 1 which_cut(1-n) - -;
#X floatatom 108 192 5 0 1 1 fade_ratio(0-1) - -;
#X obj 108 215 sig~ 0.6;
#X obj 6 239 osci/cut_mix~ 2;
#X obj 57 168 phasor~ 0.1;
#X obj 6 289 osci/square~ 0 0 0.5;
#X obj 162 288 osci/square~ 0 0 0.2;
#X obj 6 313 osci/cut_idx~;
#X obj 162 313 osci/cut_idx~;
#X obj 6 342 osci/out~;
#X obj 306 -9 declare -lib osci;
#X text 3 429 ============================================================inlets
;
#X text 2 529 ============================================================outlets
;
#X text 2 589 ============================================================arguments
;
#X text 1 647 ========================================================================================================================
;
#X text 24 464 1 signal - phase;
#X obj 183 357 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412
-174938 -203556;
#X text 210 360 open online documentation;
#N canvas 0 23 449 130 docs 0;
#X obj 3 36 inlet;
#X obj 3 77 else/openfile https://eric-lennartson.github.io/pd-osci/#/cut_mix~
;
#X connect 0 0 1 0;
#X restore 183 391 pd docs;
#X text 5 14 [cut_mix~] splits a phasor up into equal parts to draw
multiple images at the same time. [cut_mix~] is special in that it
must be the first modifier in the chain as it splits up the incoming
phase into new phases in order to draw multiple objects onto the scope.
Each output should also be sent to [cut_idx~] to specify which cut
index to use.;
#X text 24 484 2 float/signal - which cut (1-n);
#X text 24 504 3 float/signal - fade ratio (0-1);
#X text 24 564 1-N signal - adjusted phase;
#X text 24 624 1 int - number of cuts;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 4 2;
#X connect 4 0 6 0;
#X connect 4 0 8 3;
#X connect 4 1 7 0;
#X connect 4 1 9 3;
#X connect 5 0 4 1;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 10 0;
#X connect 8 1 10 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 17 0 19 0;
