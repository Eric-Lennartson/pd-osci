#N canvas 649 62 439 667 12;
#X declare -lib osci;
#X obj 17 229 osci/out~;
#X obj 154 154 osci/cuboid~ 0 0 0 0.3 0.2 0.7;
#X obj 154 124 phasor~ 51;
#X obj 31 124 phasor~ 50;
#X obj 31 154 osci/cuboid~;
#X floatatom 17 70 5 0 1 1 interpolation_amount(0-1) - -;
#X obj 17 93 sig~;
#X obj 17 184 osci/lerp~, f 25;
#X text 2 3 [lerp~] interoplates between two 3D signal vectors When
interpolation amount is set to 0 only the first signal vector is shown
\, and when the interpolation amound is 1 \, only the second signal
vector is shown., f 59;
#X obj 203 254 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412
-174938 -203556;
#X text 231 256 open online documentation;
#N canvas 0 23 372 90 docs 0;
#X obj 7 17 inlet;
#X obj 7 41 else/openfile https://eric-lennartson.github.io/pd-osci/#/lerp~
;
#X connect 0 0 1 0;
#X restore 203 293 pd docs;
#X text 0 351 ============================================================inlets
;
#X text 0 445 ============================================================outlets
;
#X text 0 554 ============================================================arguments
;
#X text 0 631 ========================================================================================================================
;
#X obj 300 -21 declare -lib osci;
#X text 17 385 1 float/signal - interpolation amount(0-1);
#X text 17 405 2-4 float/signal - x1 \, y1 \, z1;
#X text 17 425 5-7 float/signal - x2 \, y2 \, z2;
#X text 17 485 1 signal - interpolated x;
#X text 17 505 2 signal - interpolated y;
#X text 17 525 3 signal - interpolated z;
#X text 17 591 1-3 float - x1 \, y1 \, z1;
#X text 17 612 4-6 float - x2 \, y2 \, z2;
#X connect 1 0 7 4;
#X connect 1 1 7 5;
#X connect 1 2 7 6;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 7 1;
#X connect 4 1 7 2;
#X connect 4 2 7 3;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 7 1 0 1;
#X connect 9 0 11 0;
