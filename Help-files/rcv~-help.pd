#N canvas 311 143 435 606 12;
#X declare -lib osci;
#X obj 3 258 phasor~ 50;
#X obj 3 282 osci/circle~ 0 0 2;
#X obj 175 287 osci/out~;
#X obj 3 306 osci/snd~ foo;
#X obj 175 258 osci/rcv~ foo;
#X text 7 32 [rcv~] is a wrapper for pdâ€™s built in [receive~]. Internally
\, it creates three unique receives based on the symbol argument provided
on creation. For example \, foo-x foo-y foo-z. While not completely
necessary \, to avoid warnings the matching [snd~] should be made to
first.;
#X text 6 117 A [send~] object copies its input to a local buffer which
all [receive~] objects of the same name read from. They may be in different
windows or even different patches. Any number of receives may be associated
with one [send~] but it is an error to have two sends of the same name.
;
#X obj 15 196 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412 -174938
-203556;
#N canvas 0 23 503 114 docs 0;
#X obj 37 37 inlet;
#X obj 37 61 else/openfile https://eric-lennartson.github.io/pd-osci/#/rcv~
;
#X connect 0 0 1 0;
#X restore 15 225 pd docs;
#X text 44 198 online documentation;
#X text 5 404 ============================================================inlets
;
#X text 5 454 ============================================================outlets
;
#X text 5 544 ============================================================arguments
;
#X text 15 485 1 signal - x;
#X text 15 505 2 signal - y;
#X text 15 525 3 signal - z;
#X text 15 436 none;
#X text 15 576 1 symbol - name to receive;
#X obj 287 8 declare -lib osci;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 3 1;
#X connect 4 0 2 0;
#X connect 4 1 2 1;
#X connect 7 0 8 0;
