#N canvas 579 23 432 686 12;
#X declare -lib osci;
#X obj 6 185 osci/square~ 0 0 0.5;
#X obj 159 186 osci/square~ 0 0 0.2;
#X obj 6 91 phasor~ 100;
#X obj 6 229 osci/cut_idx~;
#X obj 159 231 osci/cut_idx~;
#X obj 6 258 osci/out~;
#X obj 6 116 osci/cut_equal~ 2;
#X text 3 349 ============================================================inlets
;
#X text 2 489 ============================================================outlets
;
#X text 2 589 ============================================================arguments
;
#X text 1 647 ========================================================================================================================
;
#X obj 153 277 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412
-174938 -203556;
#X text 180 280 open online documentation;
#N canvas 0 23 449 130 docs 1;
#X obj 3 36 inlet;
#X obj 3 77 else/openfile https://eric-lennartson.github.io/pd-osci/#/cut_idx~
;
#X connect 0 0 1 0;
#X restore 153 311 pd docs;
#X obj 306 4 declare -lib osci;
#X text 24 384 1 signal - x;
#X text 24 404 2 signal - y;
#X text 24 424 3 signal - z;
#X text 24 444 4 signal - cut index;
#X text 24 524 1 signal - x;
#X text 24 544 2 signal - y;
#X text 24 564 3 signal - z;
#X text 24 624 none;
#X text 4 25 [cut_idx~] takes a 3D signal vector and sends the signal
out only if the cut_idx is true. It is used in conjunction with [cut_equal~]
\, [cut_mix~] \, or [cut_weights~]. [cut_idx~] comes at the end of
the signal chain.;
#X connect 0 0 3 0;
#X connect 0 1 3 1;
#X connect 1 0 4 0;
#X connect 1 1 4 1;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 3 1 5 1;
#X connect 4 0 5 0;
#X connect 4 1 5 1;
#X connect 6 0 0 0;
#X connect 6 0 3 3;
#X connect 6 1 1 0;
#X connect 6 1 4 3;
#X connect 11 0 13 0;
