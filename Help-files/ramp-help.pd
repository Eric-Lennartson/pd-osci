#N canvas 740 106 434 549 12;
#X declare -lib osci;
#X obj 10 187 osci/out~;
#X floatatom 10 112 5 0 0 0 - - -;
#X obj 10 135 osci/ramp 1000;
#X floatatom 105 113 5 0 0 0 - - -;
#X obj 10 159 osc~;
#X obj 175 213 bng 24 250 50 0 empty empty empty 30 11 0 12 -91412
-174938 -203556;
#X text 203 215 open online documentation;
#N canvas 0 23 372 90 docs 0;
#X obj 7 17 inlet;
#X obj 7 41 else/openfile https://eric-lennartson.github.io/pd-osci/#/ramp
;
#X connect 0 0 1 0;
#X restore 175 252 pd docs;
#X text 5 26 [ramp] generates linear ramps b/w values at the control
rate. The left inlet sets the target value \, and the right inlet sets
the ramp time in milliseconds. There's an optional argument to set
the ramp time as well. It is essentially a wrapper for vanilla's [line].
, f 60;
#X text 2 311 ============================================================inlets
;
#X text 2 385 ============================================================outlets
;
#X text 2 444 ============================================================arguments
;
#X text 2 511 ========================================================================================================================
;
#X text 19 345 1 float - value to ramp to;
#X text 19 365 4 float - ramp time in milliseconds;
#X text 19 423 1 float ramped value;
#X obj 298 5 declare -lib osci;
#X text 19 481 1 float - ramp time in milliseconds;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 2 1;
#X connect 4 0 0 0;
#X connect 4 0 0 1;
#X connect 5 0 7 0;
